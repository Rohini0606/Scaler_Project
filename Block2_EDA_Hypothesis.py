# -*- coding: utf-8 -*-
"""Insurance Cost Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GGZS9N0tA9VJiOC4-Q3_k7gqlgDxiW-L
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
#from category_encoders import TargetEncoder
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import precision_score, recall_score, f1_score, roc_curve
from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay, roc_auc_score, precision_recall_curve
from imblearn.over_sampling import SMOTE
import scipy.stats as stats

df = pd.read_csv("insurance.csv")

df.head()

df.info()

df.describe()

df['Diabetes'].value_counts()

df['BloodPressureProblems'].value_counts()

df['AnyTransplants'].value_counts()

df['NumberOfMajorSurgeries'].value_counts()

df['HistoryOfCancerInFamily'].value_counts()

df['AnyChronicDiseases'].value_counts()

"""**Creating bins for Age and Premium Price**"""

agebin = [10,20,30,40,50,60]
labels = ['10-20','21-30','31-40', '41-50', '51-60']
PPbin = [10000, 20000, 25000,30000,35000,45000]
labels2 = ['10K-20K','21K-25K','25K-30K','30K-35K', '35K-45K']

df['PremiumPrice_bins'] = pd.cut(df['PremiumPrice'], bins=PPbin,labels = labels2)
df['Age_bins'] = pd.cut(df['Age'], bins=agebin, labels = labels)

df['Age_bins'].value_counts()

"""**Most people busying Insurances are from age 41-50**"""

pivot_table = pd.pivot_table(df,
                             index='Age_bins',
                             columns='PremiumPrice_bins',
                             aggfunc='size',
                             fill_value=0)

# Create the heatmap
plt.figure(figsize=(10, 8))
sns.heatmap(pivot_table, annot=True, cmap='YlGnBu', fmt='d')

# Show the plot
plt.title('Heatmap of Binned Data')
plt.show()

"""**Observation: Age groups 30 - 50 are the most paying groups for Insurance premium.**"""

plt.scatter(df['PremiumPrice'],df['Age'])
 plt.xlabel('premiumprice')
 plt.ylabel('Age')
 plt.show()

"""***Observation: No correlation between age and premium price ***"""

sns.barplot(x= 'PremiumPrice', y = 'Diabetes', data = df)
plt.xticks(rotation = 90)
plt.show()

sns.barplot(x= 'PremiumPrice', y = 'AnyTransplants', data = df)
plt.xticks(rotation = 90)
plt.show()

"""**Observation: Very few people have transplants. No relation between Transplants and PremiumPrice**

---


"""

sns.barplot(x= 'PremiumPrice', y = 'AnyChronicDiseases', data = df)
plt.xticks(rotation = 90)
plt.show()

sns.boxplot(y = df['Age'], x =df['PremiumPrice'])
plt.xticks(rotation = 90)
plt.show()

sns.barplot(y = df['Height'], x =df['PremiumPrice_bins'])
plt.xticks(rotation = 90)
plt.show()

sns.barplot(y = df['Weight'], x =df['PremiumPrice_bins'])
plt.xticks(rotation = 90)
plt.show()

"""**Observation: People of weight above 80 kgs are paying insurance of 30 - 35 K**"""

data = pd.DataFrame()
data['Age_bins'] = df['Age_bins']
data['PremiumPrice_bins'] = df['PremiumPrice_bins']
data['Diabetes'] = df['Diabetes']

pivot_table = pd.pivot_table(data,
                             index=['Age_bins', 'PremiumPrice_bins'],
                             columns='Diabetes',
                             aggfunc='size',
                             fill_value=0)

diabetes_categories = pivot_table.columns

plt.figure(figsize=(12, 8))

# Create a heatmap for diabetes = 0
plt.subplot(1, 2, 1)
sns.heatmap(pivot_table[diabetes_categories], annot=True, cmap='Blues', fmt='d')
plt.title('Heatmap for Diabetes')

data = pd.DataFrame()
data['Age_bins'] = df['Age_bins']
data['PremiumPrice_bins'] = df['PremiumPrice_bins']
data['BP'] = df['BloodPressureProblems']
pivot_table = pd.pivot_table(data,
                             index=['Age_bins', 'PremiumPrice_bins'],
                             columns='BP',
                             aggfunc='size',
                             fill_value=0)
diabetes_categories = pivot_table.columns
plt.figure(figsize=(12, 8))

# Create a heatmap for diabetes = 0
plt.subplot(1, 2, 1)
sns.heatmap(pivot_table[diabetes_categories], annot=True, cmap='Blues', fmt='d')
plt.title('Heatmap for BP')

data = pd.DataFrame()
data['Age_bins'] = df['Age_bins']
data['PremiumPrice_bins'] = df['PremiumPrice_bins']
data['Transplants'] = df['AnyTransplants']
pivot_table = pd.pivot_table(data,
                             index=['Age_bins', 'PremiumPrice_bins'],
                             columns='Transplants',
                             aggfunc='size',
                             fill_value=0)
diabetes_categories = pivot_table.columns
plt.figure(figsize=(12, 8))

# Create a heatmap for diabetes = 0
plt.subplot(1, 2, 1)
sns.heatmap(pivot_table[diabetes_categories], annot=True, cmap='Blues', fmt='d')
plt.title('Heatmap for Transplants')

data = pd.DataFrame()
data['Age_bins'] = df['Age_bins']
data['PremiumPrice_bins'] = df['PremiumPrice_bins']
data['Cancer'] = df['HistoryOfCancerInFamily']
pivot_table = pd.pivot_table(data,
                             index=['Age_bins', 'PremiumPrice_bins'],
                             columns='Cancer',
                             aggfunc='size',
                             fill_value=0)
diabetes_categories = pivot_table.columns
plt.figure(figsize=(12, 8))

# Create a heatmap for diabetes = 0
plt.subplot(1, 2, 1)
sns.heatmap(pivot_table[diabetes_categories], annot=True, cmap='Blues', fmt='d')
plt.title('Heatmap for Cancer History')

data = pd.DataFrame()
data['Age_bins'] = df['Age_bins']
data['PremiumPrice_bins'] = df['PremiumPrice_bins']
data['Allergies'] = df['KnownAllergies']
pivot_table = pd.pivot_table(data,
                             index=['Age_bins', 'PremiumPrice_bins'],
                             columns='Allergies',
                             aggfunc='size',
                             fill_value=0)
diabetes_categories = pivot_table.columns
plt.figure(figsize=(12, 8))

# Create a heatmap for diabetes = 0
plt.subplot(1, 2, 1)
sns.heatmap(pivot_table[diabetes_categories], annot=True, cmap='Blues', fmt='d')
plt.title('Heatmap for Allergies')

"""**Observation: Of all age groups, Highest number of people of age between 30-40 have opted for a premium of 20000 - 25000 irrespective of their health conditions.**"""

data = pd.DataFrame()
data['Age_bins'] = df['Age_bins']
data['PremiumPrice_bins'] = df['PremiumPrice_bins']
data['Surgeries'] = df['NumberOfMajorSurgeries']
pivot_table = pd.pivot_table(data,
                             index=['Age_bins', 'PremiumPrice_bins'],
                             columns='Surgeries',
                             aggfunc='size',
                             fill_value=0)
diabetes_categories = pivot_table.columns
plt.figure(figsize=(12, 8))

# Create a heatmap for diabetes = 0
plt.subplot(1, 2, 1)
sns.heatmap(pivot_table[diabetes_categories], annot=True, cmap='Blues', fmt='d')
plt.title('Heatmap for Surgeries')

df['group'] = df.apply(lambda row: '20-30' if 20 < row['Age'] <= 30 else 'Other', axis=1)

# Group 1: People aged 20-30 with diabetes
group1 = df[df['group'] == '20-30']['PremiumPrice']

# Group 2: All others
group2 = df[df['group'] == 'Other']['PremiumPrice']

# Perform t-test
t_stat, p_val = stats.ttest_ind(group1, group2, equal_var=False)  # Welch's t-test

# Print results
print(f"T-statistic: {t_stat}, P-value: {p_val}")

"""# Obseravtion: For 20-30 age group, Pvalue is very low
# Ho: Premium paid by Age group 20 - 30 has no significant difference
# H1: Premium paid by Age group 20 - 30 has significant difference
# pvalue < alpha Reject null hypothesis. Premium paid by Age group 20 - 30 has significant difference
"""

df['group'] = df.apply(lambda row: '30-40' if 30 < row['Age'] <= 40 else 'Other', axis=1)

# Group 1: People aged 30-40 with diabetes
group1 = df[df['group'] == '30-40']['PremiumPrice']

# Group 2: All others
group2 = df[df['group'] == 'Other']['PremiumPrice']

# Perform t-test
t_stat, p_val = stats.ttest_ind(group1, group2, equal_var=False)  # Welch's t-test

# Print results
print(f"T-statistic: {t_stat}, P-value: {p_val}")

"""Obseravtion: For 30-40 age group, Pvalue is 0.55

Ho: Premium paid by Age group 30 - 40 has no significant difference

H1: Premium paid by Age group 30 - 40 has significant difference

pvalue > alpha, Fail to reject null hypothesis. Premium paid by Age group 30 - 40 has no significant difference
"""

df['group'] = df.apply(lambda row: '40-50' if 40 < row['Age'] <= 50 else 'Other', axis=1)

# Group 1: People aged 40-50 with diabetes
group1 = df[df['group'] == '40-50']['PremiumPrice']

# Group 2: All others
group2 = df[df['group'] == 'Other']['PremiumPrice']

# Perform t-test
t_stat, p_val = stats.ttest_ind(group1, group2, equal_var=False)  # Welch's t-test

# Print results
print(f"T-statistic: {t_stat}, P-value: {p_val}")

"""Obseravtion: For 40-50 age group, Pvalue is very low

Ho: Premium paid by Age group 40 - 50 has no significant difference

H1: Premium paid by Age group 40 - 50 has significant difference

pvalue < alpha,reject null hypothesis. Premium paid by Age group 40 - 50 has significant difference
"""

df['group'] = df.apply(lambda row: '50-60' if 50 < row['Age'] <= 60 else 'Other', axis=1)

# Group 1: People aged 30-40 with diabetes
group1 = df[df['group'] == '50-60']['PremiumPrice']

# Group 2: All others
group2 = df[df['group'] == 'Other']['PremiumPrice']

# Perform t-test
t_stat, p_val = stats.ttest_ind(group1, group2, equal_var=False)  # Welch's t-test

# Print results
print(f"T-statistic: {t_stat}, P-value: {p_val}")

"""Obseravtion: For 50-60 age group, Pvalue is very low

Ho: Premium paid by Age group 50 - 60 has no significant difference

H1: Premium paid by Age group 50 - 60 has significant difference

pvalue < alpha,reject null hypothesis. Premium paid by Age group 50 - 60 has significant difference

Insights:
- Most people from Age group of 21-30 are paying 10K - 20K premium irrespective of health conditions
- Most people from Age group of 31-50 are paying 20K - 25K premium irrespective of health conditions
- Most people from Age group of 51-60 are paying 25K - 30K premium irrespective of health conditions
- People o weight above 80 Kgs are paying insurance of 30 - 35 K

Recommendations:

- currently, Insurance paid is not affected by health conditions, it would be recommended to modify policies based on health conditions so that people can opt in/out based on their health issues.
- Not many people are paying premium above 35K, we can increase number of people in this section by providing incentives on health conditions.
"""